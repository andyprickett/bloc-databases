Exercises

1. Write out a generic SELECT statement.
>
SELECT *
FROM movies
WHERE title LIKE '%Avengers%';

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
>
SELECT -> FROM -> WHERE -> LIKE

"Star freakin' Wars, ladies!"

3. Given this dogs table (https://sqlfiddle.com/#!17/4b5d6), write queries to select the following pieces of data (intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words, for example, "Labrador Collie mix"):

* Display the name, gender, and age of all dogs that are part Labrador.
>
SELECT name, gender, age
FROM dogs
WHERE breed LIKE '%labrador%';

* Display the ids of all dogs that are under 1 year old.
>
SELECT id
FROM dogs
WHERE age < 1;

* Display the name and age of all dogs that are female and over 35lbs.
>
SELECT name, age
FROM dogs
WHERE gender LIKE 'F%' AND weight > 35;

* Display all of the information about all dogs that are not Shepherd mixes.
>
SELECT *
FROM dogs
WHERE breed NOT LIKE '%shepherd%';

* Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
>
SELECT id, age, weight, breed
FROM dogs
WHERE (breed LIKE '%great%' AND breed LIKE '%dane%') OR weight > 60;

4. Given this cats table (http://sqlfiddle.com/#!17/bc4d2), what records are returned from these queries?
* SELECT name, adoption_date FROM cats;
>
All of the records, with just the name and adoption_date columns.

* SELECT name, age FROM cats;
>
All of the records, with just the name and age columns.

5. From the cats table, write queries to select the following pieces of data.
* Display all the information about all of the available cats.
>
SELECT *
FROM cats;

* Choose one cat of each age to show to potential adopters.
>
SELECT DISTINCT ON (age) *
FROM cats;

* Find all of the names of the cats, so you don’t choose duplicate names for new cats.
>
SELECT DISTINCT ON (name) *
FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.
>
<, <= less than, less than or equal to: used when you want to select for data that is less than, or less than or equal to, a threshold. WHERE age < 45;
>, >= greater than, greater than or equal to: used when you want to select for data that is greater than, or greater than or equal to, a threshold. WHERE age > 45;
=, != equal to, not equal to: used when you want to select for data that is equal, or not equal to, some value. WHERE age = 45;
<> same as not equal to.
LIKE is like: used to match a string pattern. WHERE title LIKE '%Star Wars%';

7. From the cats table, what data is returned from these queries?
* SELECT name FROM cats WHERE gender = ‘F’;
>
name
Seashell
Nala

* SELECT name FROM cats WHERE age <> 3;
>
name
Mushi
Seashell
Victoire
Nala

* SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
>
id
3
4




